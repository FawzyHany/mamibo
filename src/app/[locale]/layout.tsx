import type { Metadata } from "next";
import { Rubik, Playfair_Display } from 'next/font/google';
import "../globals.css";
import {NextIntlClientProvider, hasLocale} from 'next-intl';
import {notFound} from 'next/navigation';
import {routing} from '../../i18n/routing';
import {NavigationMenuDemo} from '../../components/NavBar/NavBar'
import { getMessages } from 'next-intl/server';
import {Footer} from '@/components/Footer/Footer'
import ReactQueryProvider from "../provider/react-query-provider";



const rubik = Rubik({
  subsets: ['latin'],
  weight: ['400', '700'], // Add weights you want
  variable: '--font-rubik',
});

const playfairDisplay = Playfair_Display({
  subsets: ['latin'],
  weight: ['400', '700'],
  variable: '--font-playfair',
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

type Props = {
  children: React.ReactNode;
  params: { locale: string };
};

export default async function RootLayout({ children, params }: Props) {
  const { locale } = params;

  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  const messages = await getMessages({ locale });

  return (
    <html lang={locale} dir={locale === "ar" ? "rtl" : "ltr"}>
      <body className={`${rubik.variable} ${playfairDisplay.variable} antialiased`}>
        <NextIntlClientProvider locale={locale} messages={messages}>
        <ReactQueryProvider>
          <NavigationMenuDemo />
          {children}
          <Footer/>
          </ReactQueryProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
